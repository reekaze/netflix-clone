// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String     @id @default(uuid())
  name           String
  image          String?
  email          String?    @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  account        Account[]
  session        Session[]
  favorite       Favorite[]
}

model Account {
  id                String  @id @default(uuid())
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  expires      DateTime
}

model VerificationToken {
  id         String   @id @default(uuid())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Movie {
  id           String     @id @default(uuid())
  title        String
  description  String
  videoUrl     String
  thumbnailUrl String
  genre        String
  duration     String
  favoriteBy   Favorite[]
}

model Favorite {
  id      String @id @default(uuid())
  user    User   @relation(fields: [userId], references: [id])
  userId  String
  movie   Movie  @relation(fields: [movieId], references: [id])
  movieId String
}
